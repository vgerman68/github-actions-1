# This is a basic workflow to help you get started with Actions

name: CI
env:
  APPLICATION_NAME: "MyFlask"
  PAKAGE_NAME:      "Flask_deploy_ver ${{ github.sha }}" # Переменная github равна номеру commit
  
# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build1:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Execute a few commands
        run: |
          echo Message 1
          echo Message 2
          echo Application name: ${{ env.APPLICATION_NAME }}

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.

      - name: Clone git repository # Клонирование репозитория
        uses: actions/checkout@v1

      - name: List current dir
        run:  ls -la

  build2: 
    runs-on: ubuntu-latest
    needs: [build1]  # Запустить после окончания выполнения Build1
    
    env:             # Переменные видны только внутри джоба build2
      VAR1: "This is job level Variable1"
      VAR2: "This is job level Variable2"

    steps: 
      - name: Run 1
        run:  echo "Hello World!"

      - name: Deployment package
        run:  |
          echo "Deploy pakage name: ${{ env.PAKAGE_NAME }}"

      - name: Check exists aws
        run:  aws --version

      - name: Check exists zip
        run:  zip --version

      - name: Print variables
        run: |
          echo "Var1 = ${{ env.VAR1 }}"
          echo "Var2 = ${{ env.VAR2 }}"
          echo "LOCAL Var = $LOCAL_VAR"
        env:             # Переменные видны только внутри шага "Print variables"
          LOCAL_VAR: "This is step level Variable"
    
